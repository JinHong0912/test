<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappers.ArticleMapper">


	<sql id="search">
		<choose>
			<when test="searchOpt == 'all'">
				WHERE subject LIKE CONCAT('%', #{words},'%')
				OR writer LIKE CONCAT( '%', #{words}, '%')
			</when>
			<otherwise>WHERE ${searchOpt} LIKE CONCAT('%', #{words}, '%')
			</otherwise>
		</choose>
	</sql>


	<select id="getBoardConfig" resultType="boardvo">
		SELECT
		boardColor,
		boardName
		FROM
		board
		WHERE
		boardCode = #{boardCode}
	</select>

	<insert id="setArticle">

		<selectKey resultType="int" keyProperty="ref" order="BEFORE">
			<!-- 예외처리 ) 기존 ref 값을 + 1을 해서 뒤에 게시물의 ref으로 사용 max == count 와 같다 -->
			SELECT IFNULL(MAX(ref), 0) +1 FROM gat_article_${boardCode}<!-- 만약에 널값이 
				들어가 있으면 0으로 바꾸고/치환하고 1을 더하라 -->
		</selectKey>
		INSERT INTO
		gat_article_${boardCode}
		SET
		subject = #{subject},
		writer = #{writer},
		content = #{content},
		fileName = #{fileName},
		fileOriName = #{fileOriName},
		fileUrl = #{fileUrl},
		regdate = now(),
		ref = #{ref},<!-- 게시물정렬 --><!-- 기존에 있는 값을 가져와서 +1 -->
		re_step = 0, 	 <!-- 답글 그룹처리 -->
		re_level = 0 	 <!-- 몇번째 답글 -->
	</insert>

	<!-- 작성한 게시판 목록 확인 -->
	<select id="getArticleList" resultType="articlevo">

		<!-- SELECT -->
		<!-- aid, subject, writer, hit, re_level, date_format(regdate, '%Y-%m-%d') 
			as regdate -->
		<!-- FROM -->
		<!-- gat_article_${boardCode} -->
		<!-- ORDER BY -->
		<!-- ref DESC, -->
		<!-- re_step ASC -->

		<!-- 게시판 -->
		SELECT a.*, (SELECT COUNT(c.cid) FROM gat_comment_${boardCode} as c
		WHERE a.aid = c.aid) as cnt FROM gat_article_${boardCode} as a
		<include refid="search"></include>
		ORDER BY ref DESC, re_step ASC LIMIT #{start}, #{end}

	</select>

	<!--작성한 전체 게시물 순서정렬 -->
	<select id="getArticleCount" resultType="int">
		SELECT COUNT(aid) FROM gat_article_${boardCode}
		<!-- <include refid="search"></include> -->
	</select>

	<!-- 5월 15일 게시판에 들어 가고 나서 조회수 하는 부분 -->
	<update id="hitUp">
		UPDATE gat_article_${boardCode} SET hit = hit + 1
		WHERE aid = #{aid}
	</update>


	<!-- 작성한 게시판 목록 확인 -->
	<select id="getArticleView" parameterType="hashMap"
		resultType="articlevo">

		SELECT
				aid, 
				subject, 
				writer, 
				content, 
				hit, 
				fileName, 
				fileOriName, 
				fileUrl,
				date_format(regdate, '%Y-%m-%d') as	regdate
		FROM
				gat_article_${boardCode}
		WHERE
				aid = #{aid}

	</select>

	<!-- 게시판 목록 삭제 부분 -->
	<delete id="setArticleDelete">
		DELETE FROM gat_article_${boardCode} WHERE aid=#{aid}
	</delete>

	<!-- 게시판 선택 목록 삭제 부분 -->
	<delete id="setArticleDeleteAll">
		DELETE FROM gat_article_${boardCode} WHERE aid=#{aid}
	</delete>

	<!-- 답변 게시판 작성 -->

	<select id="getArticleReplyInfo" resultType="articlevo">
		SELECT
		aid, ref, re_step, re_level
		FROM
		gat_article_${boardCode} WHERE aid =#{aid};
	</select><!-- 기존 게시물 정보를 가져 와서 -->

	<update id="setArticleRef">
		UPDATE
		gat_article_${boardCode}
		SET
		re_step= re_step + 1,
		regdate = now()
		WHERE
		ref = #{ref} AND re_step > #{re_step}
	</update><!-- 답글의 위치를 바꿔 주고 -->

	<insert id="setArticleReply">
		INSERT INTO gat_article_${boardCode} SET

		subject = #{subject},
		writer = #{writer},
		content = #{content},
		fileName =
		#{fileName},
		fileOriName = #{fileOriName},
		fileUrl = #{fileUrl},
		ref =
		#{ref},
		re_step = #{re_step} + 1,
		re_level = #{re_level} + 1
	</insert><!-- 답글을 저장 -->


	<update id="setArticleUpdate">
		UPDATE gat_article_${boardCode}

		SET subject = #{subject},
		content = #{content}

		WHERE aid = #{aid}
	</update>




</mapper>